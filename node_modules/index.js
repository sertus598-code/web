require('dotenv').config();

const express = require('express');
const session = require('express-session');
const passport = require('passport');
const DiscordStrategy = require('passport-discord').Strategy;

const app = express();

const {
    DISCORD_CLIENT_ID,
    DISCORD_CLIENT_SECRET,
    CALLBACK_URL,
    SESSION_SECRET
} = process.env;

passport.serializeUser((user, done) => done(null, user));
passport.deserializeUser((obj, done) => done(null, obj));

passport.use(new DiscordStrategy({
    clientID: DISCORD_CLIENT_ID,
    clientSecret: DISCORD_CLIENT_SECRET,
    callbackURL: CALLBACK_URL,
    scope: ['identify', 'email']
}, (accessToken, refreshToken, profile, done) => {
    return done(null, profile);
}));

app.use(session({
    secret: SESSION_SECRET,
    resave: false,
    saveUninitialized: false
}));

app.use(passport.initialize());
app.use(passport.session());

app.use(express.urlencoded({ extended: true }));

function ensureAuth(req, res, next) {
    if (req.isAuthenticated()) return next();
    res.redirect('/');
}

app.get('/', (req, res) => {
    if (req.isAuthenticated()) {
        res.redirect('/tests');
        return;
    }
    res.send(`
        <h2>Autentificare cu Discord</h2>
        <a href="/auth/discord"><button>Login cu Discord</button></a>
    `);
});

app.get('/auth/discord', passport.authenticate('discord'));

app.get('/auth/discord/callback',
    passport.authenticate('discord', { failureRedirect: '/' }),
    (req, res) => res.redirect('/tests')
);

app.get('/tests', ensureAuth, (req, res) => {
    res.send(`
        <h1>Bun venit, ${req.user.username}!</h1>
        <p>Test simplu medical:</p>
        <form method="POST" action="/submit">
            <p>1. Care e formula chimică a apei?</p>
            <input type="radio" name="q1" value="H2O" required> H2O<br>
            <input type="radio" name="q1" value="CO2"> CO2<br>
            <input type="radio" name="q1" value="O2"> O2<br>
            <br>
            <button type="submit">Trimite răspunsul</button>
        </form>
        <br>
        <a href="/logout">Logout</a>
    `);
});

app.post('/submit', ensureAuth, (req, res) => {
    const raspunsCorect = 'H2O';
    const raspunsUser = req.body.q1;

    if (raspunsUser === raspunsCorect) {
        res.send(`
            <h2>Răspuns corect! Felicitări, ${req.user.username}!</h2>
            <a href="/tests">Înapoi la test</a>
            <br><br>
            <a href="/logout">Logout</a>
        `);
    } else {
        res.send(`
            <h2>Răspuns greșit. Mai încearcă!</h2>
            <a href="/tests">Înapoi la test</a>
            <br><br>
            <a href="/logout">Logout</a>
        `);
    }
});

app.get('/logout', (req, res, next) => {
    req.logout(function(err) {
        if (err) { return next(err); }
        res.redirect('/');
    });
});

const PORT = 3000;
app.listen(PORT, () => {
    console.log(`Server pornit la http://localhost:${PORT}`);
});
